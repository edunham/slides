What was wrong: New contributors often go days or weeks without a response to
their PR. 

What we did: Use highfive robot to assign a reviewer, post a welcome message,
and nag the reviewer until they comment on the bug.

What you can learn: Use a highfive or similar system.

------------------------------------------------------------------------------

What was wrong: Platform support is often at the whim of the core developers,
or resource-constrained

What we did: Invite community builders and include them as non-gated platforms
in our Buildbot

What you can learn: Channel peoples' passion about their esoteric OS of
choice. 

------------------------------------------------------------------------------

What was wrong: You build a feature, then you PR the feature, then everybody
yells at each other about whether that was a feature we should've built

What we did: Implement RFC process. 

What you can learn: Create an *expectation* of talking about major work before
attempting it, and a *clearly defined process* for how to 


------------------------------------------------------------------------------

What was wrong: Experts reviewing code have to say no a lot, which makes them
grumpy. 

What we did: Make robots say no instead.  

What you can learn: Automate yourself out of a job. Really. When you're
automating yourself out of a human interaction, make sure it's easier for the
other human to go to the automatic system rather than straight to you. 

------------------------------------------------------------------------------

What was wrong: When the tree is broken... New users have a bad time, the
contributor who broke it feels terrible, patches get hastily fixed or history
gets muddled with reverts, project looks bad

What we did: Not Rocket Science Rule

What you can learn: ""

------------------------------------------------------------------------------

What was wrong:

What we did: 

What you can learn:

